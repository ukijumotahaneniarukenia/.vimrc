#キーバインド一覧

#https://qiita.com/nmrmsys/items/03f97f5eabec18a3a18b

#https://blog.glidenote.com/blog/2013/02/04/tmux-pipe-pane-logging/
#ウィンドウ単位でファイル作成
bind-key s pipe-pane 'cat >> $HOME/tmux-#W.log' #作業ウィンドウのロギング開始
bind-key S pipe-pane #作業ウィンドウのロギング終了

#マウス操作を有効にする
#常にvim操作感を保てる
set-option -g mouse on
bind-key -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'" #スクロールアップするとコピーモードに入る
bind-key -n WheelDownPane select-pane -t= \; send-keys -M #最後までスクロールダウンするとコピーモードを抜ける

#PrefixKeyを設定
#https://qiita.com/shoma2da/items/a82b0be38f10954a45ba
set-option -g prefix C-j #Ctrl + j

#パネルの分割
#https://qiita.com/blp1526/items/390020ca9e1e56be3028
bind - split-window -h \; select-layout even-horizontal #PrefixKey -> -
bind | split-window -v \; select-layout even-vertical #PrefixKey -> |

#ウィンドウの移動
bind p previous-window #PrefixKey -> p
bind n next-window #PrefixKey -> n

#パネルの移動
bind o select-pane -L #PrefixKey -> o
bind o select-pane -D #PrefixKey -> o
bind o select-pane -U #PrefixKey -> o
bind o select-pane -R #PrefixKey -> o

#https://qiita.com/purutane/items/1d1dc4818013bbbaead4
set-window-option -g mode-keys vi #vi キーバインドを使用する
bind-key j copy-mode #PrefixKey -> j でコピーモード開始
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle #PrefixKey -> v -> Ctrl+v で矩形選択開始
bind-key -T copy-mode-vi V send-keys -X select-line #PrefixKey -> v -> Shift+v で１行選択
bind-key -T copy-mode-vi C-a send-keys -X start-of-line #PrefixKey -> v -> Ctrl+a で行頭に移動
bind-key -T copy-mode-vi C-e send-keys -X end-of-line #PrefixKey -> v -> Ctrl+e で行末に移動
bind-key -T copy-mode-vi g send-keys -X top-line # 画面上に映る最上行に移動
bind-key -T copy-mode-vi G send-keys -X bottom-line # 画面上に映る最下行に移動
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -bi" #vimキーで選択後yないしEnterキーでクリップボードないしペーストバッファーにコピー
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xsel -bi" #vimキーで選択後yないしEnterキーでクリップボードないしペーストバッファーにコピー
bind-key p paste-buffer #PrefixKey -> p でペースト エディタ開いてペーストできる便利

#２回書く必要がある
set-option -g status-interval 1 #ステータスバーを１秒毎に描画し直す
set-option -g status-interval 1 #ステータスバーを１秒毎に描画し直す

# Vimのキーバインドでペインをリサイズする
bind -r h resize-pane -L 5 #PrefixKey -> v -> h で活性ペインを左に5ピクセル移動
bind -r j resize-pane -D 5 #PrefixKey -> v -> j で活性ペインを下に5ピクセル移動
bind -r k resize-pane -U 5 #PrefixKey -> v -> k で活性ペインを上に5ピクセル移動
bind -r l resize-pane -R 5 #PrefixKey -> v -> l で活性ペインを右に5ピクセル移動

#https://qiita.com/b4b4r07/items/01359e8a3066d1c37edc

#ステータスバーの色設定
#https://blog.glidenote.com/blog/2011/12/16/custom-tmux-visual/
#set -g status-fg cyan #ステータスバーの前景色の設定
#set -g status-bg black #ステータスバーの背景色の設定

set-option -g status-left '#H:[#P]' # マシン名:[ペイン番号]
set-option -g status-right '[%Y-%m-%d(%a) %H:%M:%S]' # YYYY-MM-DD( ) HH:MI:SS

set-option -g status-left-length 90 #左のステータスバーの長さの設定
set-option -g status-right-length 90 #右のステータスバーの長さの設定

set-option -g status-position top # ステータスバーをトップに配置
set-option -g status-justify centre #ウィンドウ番号をセンタリング

#### COLOUR (Solarized dark)

# default statusbar colors
set-option -g status-style fg=yellow,bg=black #yellow and base02

# default window title colors
set-window-option -g window-status-style fg=brightblue,bg=default #base0 and default
#set-window-option -g window-status-style dim

# active window title colors
set-window-option -g window-status-current-style fg=brightred,bg=default #orange and default
#set-window-option -g window-status-current-style bright

# pane border
set-option -g pane-border-style fg=black #base02
set-option -g pane-active-border-style fg=brightgreen #base01

# message text
set-option -g message-style fg=brightred,bg=black #orange and base01

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green

# bell
set-window-option -g window-status-bell-style fg=black,bg=red #base02, red
